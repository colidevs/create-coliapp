{"version":3,"sources":["../node_modules/.pnpm/tsup@8.1.0_typescript@5.4.5/node_modules/tsup/assets/cjs_shims.js","../index.ts"],"sourcesContent":["// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","#!/usr/bin/env node\r\n\r\nimport {program} from \"commander\";\r\nimport prompts from \"prompts\";\r\nimport fs from \"fs-extra\";\r\nimport path from \"path\";\r\nimport {fileURLToPath} from \"url\";\r\nimport * as handlebars from \"handlebars\";\r\nconst $ = console.log;\r\n\r\nconst TEMPLATES: prompts.Choice[] = [\r\n  {\r\n    title: \"nextjs > eslint > typescript > shadcn/ui\",\r\n    description: \"Most popular template in colidevs\",\r\n    value: \"nextjs-eslint-ts-shadcn\",\r\n  },\r\n];\r\n\r\nprogram\r\n  .version(\"1.0.4\")\r\n  .description(\"Colidevs CLI üöÄ\")\r\n  .option(\"-n, --name <name>\", \"Your name\")\r\n  .action(async (cmd) => {\r\n    const answer = await prompts(\r\n      [\r\n        {\r\n          type: \"text\",\r\n          name: \"name\",\r\n          message: \"What is your project name? üöÄ\",\r\n          initial: cmd.name || \"my-coliapp\",\r\n        },\r\n        {\r\n          type: \"select\",\r\n          name: \"template\",\r\n          message: \"Select a project template ü™ê\",\r\n          choices: TEMPLATES,\r\n        },\r\n      ],\r\n      {\r\n        onCancel: () => {\r\n          $(`‚úåÔ∏è‚úåÔ∏è`);\r\n          process.exit(0);\r\n        },\r\n      },\r\n    );\r\n\r\n    // get template folder for the selected template\r\n    const templateDir = path.join(\r\n      path.dirname(fileURLToPath(import.meta.url)),\r\n      \"templates\",\r\n      answer.template,\r\n    );\r\n\r\n    // get the destination folder\r\n    const destination = path.join(process.cwd(), answer.name);\r\n\r\n    fs.ensureDirSync(destination);\r\n    fs.copySync(templateDir, destination);\r\n\r\n    // replace {{name}} on package.json, README.md, src/app/layout.tsx\r\n    const packageJsonPath = path.join(destination, \"package.json\");\r\n    const packageJsonContent = fs.readFileSync(packageJsonPath, \"utf-8\");\r\n    const packageJson = JSON.parse(packageJsonContent);\r\n    packageJson.name = answer.name;\r\n    fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2));\r\n\r\n    const readmePath = path.join(destination, \"README.md\");\r\n    const readmeContent = fs.readFileSync(readmePath, \"utf-8\");\r\n    const readmeTemplate = handlebars.compile(readmeContent);\r\n    const readme = readmeTemplate({name: answer.name});\r\n    fs.writeFileSync(readmePath, readme);\r\n\r\n    const layoutPath = path.join(destination, \"src/app/layout.tsx\");\r\n    const layoutContent = fs.readFileSync(layoutPath, \"utf-8\");\r\n    const layoutTemplate = handlebars.compile(layoutContent);\r\n    const layout = layoutTemplate({name: answer.name});\r\n    fs.writeFileSync(layoutPath, layout);\r\n\r\n    $(\"\\nProject created successfully üöÄüöÄ\");\r\n\r\n    $(\"--------------------------------------------------\");\r\n    $(\"üëâ\", \"cd\", answer.name);\r\n    $(\"--------------------------------------------------\");\r\n    $(\"Install dependencies:\");\r\n    $(\"üëâ\", \"pnpm install\");\r\n    $(\"--------------------------------------------------\");\r\n    $(\"Run dev server:\");\r\n    $(\"üëâ\", \"pnpm dev\\n\");\r\n  });\r\n\r\nprogram.parse(process.argv);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAM,mBAAmB,MACvB,OAAO,aAAa,cAChB,IAAI,IAAI,UAAU,UAAU,EAAE,OAC7B,SAAS,iBAAiB,SAAS,cAAc,OAClD,IAAI,IAAI,WAAW,SAAS,OAAO,EAAE;AAEpC,IAAM,gBAAgC,iCAAiB;;;ACT9D,uBAAsB;AACtB,qBAAoB;AACpB,sBAAe;AACf,kBAAiB;AACjB,iBAA4B;AAC5B,iBAA4B;AAC5B,IAAM,IAAI,QAAQ;AAElB,IAAM,YAA8B;AAAA,EAClC;AAAA,IACE,OAAO;AAAA,IACP,aAAa;AAAA,IACb,OAAO;AAAA,EACT;AACF;AAEA,yBACG,QAAQ,OAAO,EACf,YAAY,wBAAiB,EAC7B,OAAO,qBAAqB,WAAW,EACvC,OAAO,OAAO,QAAQ;AACrB,QAAM,SAAS,UAAM,eAAAA;AAAA,IACnB;AAAA,MACE;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS,IAAI,QAAQ;AAAA,MACvB;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM;AAAA,QACN,SAAS;AAAA,QACT,SAAS;AAAA,MACX;AAAA,IACF;AAAA,IACA;AAAA,MACE,UAAU,MAAM;AACd,UAAE,0BAAM;AACR,gBAAQ,KAAK,CAAC;AAAA,MAChB;AAAA,IACF;AAAA,EACF;AAGA,QAAM,cAAc,YAAAC,QAAK;AAAA,IACvB,YAAAA,QAAK,YAAQ,0BAAc,aAAe,CAAC;AAAA,IAC3C;AAAA,IACA,OAAO;AAAA,EACT;AAGA,QAAM,cAAc,YAAAA,QAAK,KAAK,QAAQ,IAAI,GAAG,OAAO,IAAI;AAExD,kBAAAC,QAAG,cAAc,WAAW;AAC5B,kBAAAA,QAAG,SAAS,aAAa,WAAW;AAGpC,QAAM,kBAAkB,YAAAD,QAAK,KAAK,aAAa,cAAc;AAC7D,QAAM,qBAAqB,gBAAAC,QAAG,aAAa,iBAAiB,OAAO;AACnE,QAAM,cAAc,KAAK,MAAM,kBAAkB;AACjD,cAAY,OAAO,OAAO;AAC1B,kBAAAA,QAAG,cAAc,iBAAiB,KAAK,UAAU,aAAa,MAAM,CAAC,CAAC;AAEtE,QAAM,aAAa,YAAAD,QAAK,KAAK,aAAa,WAAW;AACrD,QAAM,gBAAgB,gBAAAC,QAAG,aAAa,YAAY,OAAO;AACzD,QAAM,iBAA4B,mBAAQ,aAAa;AACvD,QAAM,SAAS,eAAe,EAAC,MAAM,OAAO,KAAI,CAAC;AACjD,kBAAAA,QAAG,cAAc,YAAY,MAAM;AAEnC,QAAM,aAAa,YAAAD,QAAK,KAAK,aAAa,oBAAoB;AAC9D,QAAM,gBAAgB,gBAAAC,QAAG,aAAa,YAAY,OAAO;AACzD,QAAM,iBAA4B,mBAAQ,aAAa;AACvD,QAAM,SAAS,eAAe,EAAC,MAAM,OAAO,KAAI,CAAC;AACjD,kBAAAA,QAAG,cAAc,YAAY,MAAM;AAEnC,IAAE,mDAAqC;AAEvC,IAAE,oDAAoD;AACtD,IAAE,aAAM,MAAM,OAAO,IAAI;AACzB,IAAE,oDAAoD;AACtD,IAAE,uBAAuB;AACzB,IAAE,aAAM,cAAc;AACtB,IAAE,oDAAoD;AACtD,IAAE,iBAAiB;AACnB,IAAE,aAAM,YAAY;AACtB,CAAC;AAEH,yBAAQ,MAAM,QAAQ,IAAI;","names":["prompts","path","fs"]}