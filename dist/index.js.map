{"version":3,"sources":["../node_modules/.pnpm/tsup@8.1.0_typescript@5.4.5/node_modules/tsup/assets/cjs_shims.js","../index.ts"],"sourcesContent":["// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","#!/usr/bin/env node\r\n\r\nimport path from \"node:path\";\r\nimport {fileURLToPath} from \"node:url\";\r\nimport {readFile, writeFile} from \"node:fs/promises\";\r\nimport prompts from \"prompts\";\r\nimport fs from \"fs-extra\";\r\nimport yargs from \"yargs\";\r\nimport {hideBin} from \"yargs/helpers\";\r\nimport {glob} from \"glob\";\r\nconst $ = console.log;\r\n\r\nconst TEMPLATES: prompts.Choice[] = [\r\n  {\r\n    title: \"nextjs 15 > biome > shadcn/ui\",\r\n    description: \"Bienvenido a Next.JS 15 y React 19, app renovada de colidevs\",\r\n    value: \"nextjs15-biome-shadcn\",\r\n  },\r\n  {\r\n    title: \"nextjs > eslint > typescript > shadcn/ui\",\r\n    description: \"Basico, usado principalmente para practicar.\",\r\n    value: \"nextjs-eslint-ts-shadcn\",\r\n  },\r\n  {\r\n    title: \"nextjs > eslint > typescript > shadcn/ui > google sheet\",\r\n    description: \"Viene preparado para que uses un google sheet como db.\",\r\n    value: \"nextjs-eslint-ts-shadcn-sheet\",\r\n  },\r\n  {\r\n    title: \"react > vite > js > tailwind\",\r\n    description: \"Basico, usado principalmente para practicar o crear una app client side.\",\r\n    value: \"react-vite-js-tailwind\",\r\n  },\r\n  {\r\n    title: \"express + typescript\",\r\n    description: \"Proyecto backend basico con Express y TypeScript, ideal para crear APIs.\",\r\n    value: \"express-ts\",\r\n  },\r\n];\r\n\r\nconst args = yargs(hideBin(process.argv)).options({\r\n  name: {type: \"string\", alias: \"n\", description: \"Project name\"},\r\n});\r\n\r\nprompts.override(args.argv);\r\n\r\nasync function main() {\r\n  const cmd = await args.argv;\r\n\r\n  const answer = await prompts(\r\n    [\r\n      {\r\n        type: \"text\",\r\n        name: \"name\",\r\n        message: \"What is your project name? üöÄ\",\r\n        initial: cmd.name || \"my-coliapp\",\r\n        validate: (value) => {\r\n          if (value.match(/[^a-zA-Z0-9-_]+/g))\r\n            return \"Project name can only contain letters, numbers, dashes and underscores\";\r\n\r\n          return true;\r\n        },\r\n      },\r\n      {\r\n        type: \"select\",\r\n        name: \"template\",\r\n        message: \"Select a project template ü™ê\",\r\n        choices: TEMPLATES,\r\n      },\r\n    ],\r\n    {\r\n      onCancel: () => {\r\n        $(`‚úåÔ∏è‚úåÔ∏è`);\r\n        process.exit(0);\r\n      },\r\n    },\r\n  );\r\n\r\n  // get template folder for the selected template\r\n  const templateDir = path.join(\r\n    path.dirname(fileURLToPath(import.meta.url)),\r\n    \"templates\",\r\n    answer.template,\r\n  );\r\n\r\n  // get the destination folder\r\n  const destination = path.join(process.cwd(), answer.name);\r\n\r\n  if (fs.existsSync(destination)) {\r\n    $(`üö®üö®`, `Folder already exists: ${destination}`);\r\n\r\n    const overwrite = await prompts({\r\n      type: \"confirm\",\r\n      name: \"value\",\r\n      message: \"Do you want to overwrite the folder?\",\r\n      initial: false,\r\n    });\r\n\r\n    if (!overwrite.value) {\r\n      $(`‚úåÔ∏è‚úåÔ∏è`);\r\n      process.exit(0);\r\n    }\r\n\r\n    fs.removeSync(destination);\r\n\r\n    $(`üö®üö®`, `Folder removed: ${destination}`);\r\n\r\n    fs.ensureDirSync(destination);\r\n\r\n    $(`üö®üö®`, `Folder created: ${destination}`);\r\n  }\r\n\r\n  // copy template to destination\r\n  cpyTemplate(templateDir, destination);\r\n\r\n  // replace {{name}} on package.json, README.md, src/app/layout.tsx\r\n  await replaceName(destination, answer.name);\r\n\r\n  projectCreatedSuccessfully(answer.name);\r\n}\r\n\r\nmain().catch(console.error);\r\n\r\nasync function replaceName(destination: string, projectName: string) {\r\n  const files = await glob(`**/*`, {nodir: true, cwd: destination, absolute: true});\r\n\r\n  for await (const file of files) {\r\n    const data = await readFile(file, \"utf8\");\r\n    const draft = data.replace(/{{name}}/g, projectName);\r\n\r\n    await writeFile(file, draft, \"utf8\");\r\n  }\r\n}\r\n\r\nfunction cpyTemplate(templateDir: string, destination: string) {\r\n  fs.ensureDirSync(destination);\r\n  fs.copySync(templateDir, destination);\r\n}\r\n\r\nfunction projectCreatedSuccessfully(projectName: string) {\r\n  $(\"\\nProject created successfully üöÄüöÄ\");\r\n\r\n  $(\"--------------------------------------------------\");\r\n  $(\"üëâ\", \"cd\", projectName);\r\n  $(\"--------------------------------------------------\");\r\n  $(\"Install dependencies:\");\r\n  $(\"üëâ\", \"pnpm install\");\r\n  $(\"--------------------------------------------------\");\r\n  $(\"Run dev server:\");\r\n  $(\"üëâ\", \"pnpm dev\\n\");\r\n}\r\n"],"mappings":"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","names":["yargs","prompts","path","fs"]}